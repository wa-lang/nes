
import "js"

/*
不能使用该类型直接声明值，需通过 QueryCanvas() 创建
*/
type Canvas struct {
    js.ExtObj
}

func QueryCanvas(selector: string) => (canvas: Canvas, succ: bool) {
    h := js.QuerySelector(selector)
    if h != 0 {
        canvas.ExtObj = js.WrapExtObj(h)
        succ = true
    } else {
        succ = false
    }

    return
}

func Canvas.GetContext2D() => (ctx: Context2D, succ: bool) {
    h := jsGetContext2D(this.GetHandle())
    if h != 0 {
        ctx.ExtObj = js.WrapExtObj(h)
        succ = true
    } else {
        succ = false
    }

    return
}

/*
不能使用该类型直接声明值，需通过 Canvas.GetContext2D 创建
*/
type Context2D struct {
    js.ExtObj
}

func Context2D.SetFillStyle(style: string) {
    jsSetFillStyle(this.GetHandle(), style)
}

func Context2D.FillRect(x, y, w, h: i32) {
    jsFillRect(this.GetHandle(), x, y, w, h)
}

/*
向 ctx 写入图片
(x, y): 写入起点
(w, h)：图片长宽，以像素为单位
buf：图片 RGBA 格式缓冲，容量必须为 w*h*4 字节
*/
func Context2D.PutImageData(x, y, w, h: i32, buf :[]u8) {
    jsPutImageData(this.GetHandle(), x, y, w, h, buf)
}

/*
    c, _ := canvas.QueryCanvas("#canvas")
    ctx, _ := c.GetContext2D()

    ctx.SetFillStyle("green")
    ctx.FillRect(0, 0, 50, 50)
*/